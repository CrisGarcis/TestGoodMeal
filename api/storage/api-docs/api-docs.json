{
    "openapi": "3.0.0",
    "info": {
        "title": "GoodMeal test",
        "contact": {
            "name": "CrisGarcis",
            "email": "jhonier491@gmail.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8200/",
            "description": "Desarrollo Test"
        }
    ],
    "paths": {
        "/store/product/{storeId}": {
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Returns list store's products",
                "description": "Returns a map of products",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of pet that needs to be fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "maximum": 10,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/store/product": {
            "post": {
                "tags": [
                    "product"
                ],
                "summary": "New Product",
                "operationId": "product",
                "requestBody": {
                    "description": "Product object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/store/product/{storeID}": {
            "get": {
                "tags": [
                    "product"
                ],
                "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "ID of store that needs to be fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "maximum": 10,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Store not found"
                    }
                }
            }
        },
        "/store/product/{product_id}": {
            "delete": {
                "tags": [
                    "product"
                ],
                "summary": "Delete product  by ID",
                "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "ID of the product that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/store/store": {
            "get": {
                "tags": [
                    "store"
                ],
                "summary": "Returns list stores",
                "description": "Returns a map of stores",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "store"
                ],
                "summary": "New Store",
                "operationId": "store",
                "requestBody": {
                    "description": "Store object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A store",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/store/store/{model_id}": {
            "get": {
                "tags": [
                    "store"
                ],
                "summary": "Returns a specific store by its ID",
                "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "model_id",
                        "in": "path",
                        "description": "ID of store that needs to be fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "maximum": 10,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Store not found"
                    }
                }
            }
        },
        "/store/store/{store_id}": {
            "delete": {
                "tags": [
                    "store"
                ],
                "summary": "Delete store  by ID",
                "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "ID of the store that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Store not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ProductRequest": {
                "title": "ProductRequest",
                "required": [
                    "display_name",
                    "name",
                    "document",
                    "price",
                    "store_id"
                ],
                "properties": {
                    "display_name": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "double"
                    },
                    "category_id": {
                        "type": "integer"
                    },
                    "store_id": {
                        "type": "integer"
                    },
                    "document": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "ProductResponse": {
                "title": "ProductResponse",
                "description": "Class Store",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "attributes": {
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "display_name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "StoreRequest": {
                "title": "StoreRequest",
                "required": [
                    "display_name",
                    "name",
                    "document",
                    "latitude",
                    "longitude"
                ],
                "properties": {
                    "display_name": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "time"
                    },
                    "end_time": {
                        "type": "time"
                    },
                    "address": {
                        "type": "string"
                    },
                    "document": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreResponse": {
                "title": "StoreResponse",
                "description": "Class Store",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "attributes": {
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "body": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        }
    }
}